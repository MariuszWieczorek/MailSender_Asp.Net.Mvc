@model MailSender.Models.ViewModels.EditEmailRecipientViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>

<p class="alert alert-dark mb-4 mt-4">
    EmailRecipiment ,
    EmailId = <strong>@Model.EmailRecipient.EmailId</strong> ,
    Id = <strong>@Model.EmailRecipient.Id</strong>,
    AddressId = <strong>@Model.EmailRecipient.AddressId</strong>
</p>

@using (Html.BeginForm("EmailRecipient", "Home"))
{
    @Html.AntiForgeryToken()

    if (Model.EmailRecipient.Id == 0)
    {
        <p class="alert alert-info mb-4 mt-4">
            Pole: Adres jest <strong>wymagane</strong>
        </p>
    }
    
    @Html.HiddenFor(x => x.EmailRecipient.Id)

    <div class="form-group mb-3">
        @Html.LabelFor(x => x.EmailRecipient.AddressId)
        @Html.DropDownListFor(x => x.EmailRecipient.AddressId,
       new SelectList(Model.Addresses, "Id", "Name"),
       "--- Wybierz odbiorcę ---",
       new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.EmailRecipient.AddressId)
    </div>

    <button class="btn btn-primary btn-lg" type="submit">
        Zapisz
    </button>

}



@section scripts
{
    <script type="text/javascript">
        // --------------------------------------------

        $(document).ready(function () {

            // w formatowaniu ma być precinek, a nie kropka
            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });

    </script>
}
