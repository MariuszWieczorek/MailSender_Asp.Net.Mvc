@model MailSender.Models.ViewModels.EditEmailViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>


<div class="row">
    <div class="col-lg-12">

        @using (Html.BeginForm("Email", "Home"))
        {

            @Html.AntiForgeryToken()

            if (Model.Email.Id == 0)
            {
                <p class="alert alert-info mb-4 mt-4">
                    Pola: Temat, Wiadomość są
                    <strong>wymagane</strong>
                </p>
            }

            @Html.HiddenFor(x => x.Email.Id)

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.Email.Subject)
                @Html.TextBoxFor(x => x.Email.Subject,
                 new { @class = "form-control", style = "width: 100%; max-width: 100%" })
                @Html.ValidationMessageFor(x => x.Email.Subject)
            </div>

        
            <div class="form-group mb-3">
                @Html.LabelFor(x => x.Email.Message)
                @Html.TextAreaFor(x => x.Email.Message,
                 new { @class = "form-control", style = "width: 100%; max-width: 100%" })
                @Html.ValidationMessageFor(x => x.Email.Message)
            </div>

            
            <div class="form-group mb-3">
                @Html.LabelFor(x => x.Email.CreatedDate)
                @Html.TextBoxFor(x => x.Email.CreatedDate,
               new { @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(x => x.Email.SentDate)
                @Html.TextBoxFor(x => x.Email.SentDate,
               new { @class = "form-control", @readonly = "readonly" })
            </div>

            <button class="btn btn-primary btn-lg" type="submit">
                Zapisz
            </button>

        }

    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        // --------------------------------------------

        $(document).ready(function () {

            // w formatowaniu ma być precinek, a nie kropka
            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });

    </script>
}
