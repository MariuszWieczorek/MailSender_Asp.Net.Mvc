@model MailSender.Models.ViewModels.EditAddressViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>

<p class="alert alert-dark mb-4 mt-4">
    View: <strong>Address</strong> <br>
    Id = <strong>@Model.Address.Id</strong>,
    UserId = <strong>@Model.Address.UserId</strong> ,
</p>

@using (Html.BeginForm("Address", "Home"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    if (Model.Address.Id == 0)
    {
        <p class="alert alert-info mb-4 mt-4">
            Pola: Nazwa i Adres są <strong>wymagane</strong>
        </p>
    }
    @Html.HiddenFor(x => x.Address.Id)
    @Html.HiddenFor(x => x.Address.UserId)

    <div class="form-group mb-3">
        @Html.LabelFor(x => x.Address.Name)
        @Html.TextBoxFor(x => x.Address.Name,
       new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Address.Name)
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(x => x.Address.Email)
        @Html.TextBoxFor(x => x.Address.Email,
       new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Address.Email)
    </div>

    <button class="btn btn-primary btn-lg" type="submit">
        Zapisz
    </button>
}



@section scripts
{
    <script type="text/javascript">
        // --------------------------------------------

        $(document).ready(function () {

            // w formatowaniu ma być precinek, a nie kropka
            $.validator.methods.number = function (value, element) {
                return this.optional(element) || /^-?(?:\d+|\{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
            }
        });

    </script>
}


